# Makefile.in generated by automake 1.10 from Makefile.am.
# fortran/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/qd
pkglibdir = $(libdir)/qd
pkgincludedir = $(includedir)/qd
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin11.2.0
host_triplet = i386-apple-darwin11.2.0
subdir = fortran
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/second.f.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_clock_gettime.m4 \
	$(top_srcdir)/m4/ax_cxx_copysign.m4 \
	$(top_srcdir)/m4/ax_cxx_fc_lib.m4 \
	$(top_srcdir)/m4/ax_cxx_fma.m4 \
	$(top_srcdir)/m4/ax_cxx_isfinite.m4 \
	$(top_srcdir)/m4/ax_cxx_isinf.m4 \
	$(top_srcdir)/m4/ax_cxx_isnan.m4 \
	$(top_srcdir)/m4/ax_f90_module_flag.m4 \
	$(top_srcdir)/m4/ax_f90_module_style.m4 \
	$(top_srcdir)/m4/ax_fc_etime.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/include/qd/qd_config.h
CONFIG_CLEAN_FILES = second.f
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkglibdir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libqd_f_main_a_AR = $(AR) $(ARFLAGS)
libqd_f_main_a_LIBADD =
am__libqd_f_main_a_SOURCES_DIST = main.cpp
#am_libqd_f_main_a_OBJECTS = main.$(OBJEXT)
libqd_f_main_a_OBJECTS = $(am_libqd_f_main_a_OBJECTS)
libqdmod_a_AR = $(AR) $(ARFLAGS)
libqdmod_a_LIBADD =
am__libqdmod_a_SOURCES_DIST = ddext.f ddmod.f qdext.f qdmod.f f_dd.cpp \
	f_qd.cpp
#am_libqdmod_a_OBJECTS = ddext.$(OBJEXT) \
#	ddmod.$(OBJEXT) qdext.$(OBJEXT) \
#	qdmod.$(OBJEXT) f_dd.$(OBJEXT) \
#	f_qd.$(OBJEXT)
libqdmod_a_OBJECTS = $(am_libqdmod_a_OBJECTS)
am__dd_timer_SOURCES_DIST = dd_timer.f
#am_dd_timer_OBJECTS = dd_timer.$(OBJEXT)
#nodist_dd_timer_OBJECTS = second.$(OBJEXT)
dd_timer_OBJECTS = $(am_dd_timer_OBJECTS) $(nodist_dd_timer_OBJECTS)
dd_timer_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
#dd_timer_DEPENDENCIES = libqdmod.a libqd_f_main.a \
#	$(top_builddir)/src/libqd.a \
#	$(am__DEPENDENCIES_1)
am__qd_timer_SOURCES_DIST = qd_timer.f
#am_qd_timer_OBJECTS = qd_timer.$(OBJEXT)
#nodist_qd_timer_OBJECTS = second.$(OBJEXT)
qd_timer_OBJECTS = $(am_qd_timer_OBJECTS) $(nodist_qd_timer_OBJECTS)
qd_timer_LDADD = $(LDADD)
#qd_timer_DEPENDENCIES = libqdmod.a libqd_f_main.a \
#	$(top_builddir)/src/libqd.a \
#	$(am__DEPENDENCIES_1)
am__quaderq_SOURCES_DIST = tquaderq.f
#am_quaderq_OBJECTS = tquaderq.$(OBJEXT)
#nodist_quaderq_OBJECTS = second.$(OBJEXT)
quaderq_OBJECTS = $(am_quaderq_OBJECTS) $(nodist_quaderq_OBJECTS)
quaderq_LDADD = $(LDADD)
#quaderq_DEPENDENCIES = libqdmod.a libqd_f_main.a \
#	$(top_builddir)/src/libqd.a \
#	$(am__DEPENDENCIES_1)
am__quadgsq_SOURCES_DIST = tquadgsq.f
#am_quadgsq_OBJECTS = tquadgsq.$(OBJEXT)
#nodist_quadgsq_OBJECTS = second.$(OBJEXT)
quadgsq_OBJECTS = $(am_quadgsq_OBJECTS) $(nodist_quadgsq_OBJECTS)
quadgsq_LDADD = $(LDADD)
#quadgsq_DEPENDENCIES = libqdmod.a libqd_f_main.a \
#	$(top_builddir)/src/libqd.a \
#	$(am__DEPENDENCIES_1)
am__quadgsq2d_SOURCES_DIST = tquadgsq2d.f
#am_quadgsq2d_OBJECTS = tquadgsq2d.$(OBJEXT)
#nodist_quadgsq2d_OBJECTS = second.$(OBJEXT)
quadgsq2d_OBJECTS = $(am_quadgsq2d_OBJECTS) \
	$(nodist_quadgsq2d_OBJECTS)
quadgsq2d_LDADD = $(LDADD)
#quadgsq2d_DEPENDENCIES = libqdmod.a libqd_f_main.a \
#	$(top_builddir)/src/libqd.a \
#	$(am__DEPENDENCIES_1)
am__quadtsq_SOURCES_DIST = tquadtsq.f
#am_quadtsq_OBJECTS = tquadtsq.$(OBJEXT)
#nodist_quadtsq_OBJECTS = second.$(OBJEXT)
quadtsq_OBJECTS = $(am_quadtsq_OBJECTS) $(nodist_quadtsq_OBJECTS)
quadtsq_LDADD = $(LDADD)
#quadtsq_DEPENDENCIES = libqdmod.a libqd_f_main.a \
#	$(top_builddir)/src/libqd.a \
#	$(am__DEPENDENCIES_1)
am__quadtsq2d_SOURCES_DIST = tquadtsq2d.f
#am_quadtsq2d_OBJECTS = tquadtsq2d.$(OBJEXT)
#nodist_quadtsq2d_OBJECTS = second.$(OBJEXT)
quadtsq2d_OBJECTS = $(am_quadtsq2d_OBJECTS) \
	$(nodist_quadtsq2d_OBJECTS)
quadtsq2d_LDADD = $(LDADD)
#quadtsq2d_DEPENDENCIES = libqdmod.a libqd_f_main.a \
#	$(top_builddir)/src/libqd.a \
#	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
SOURCES = $(libqd_f_main_a_SOURCES) $(libqdmod_a_SOURCES) \
	$(dd_timer_SOURCES) $(nodist_dd_timer_SOURCES) \
	$(qd_timer_SOURCES) $(nodist_qd_timer_SOURCES) \
	$(quaderq_SOURCES) $(nodist_quaderq_SOURCES) \
	$(quadgsq_SOURCES) $(nodist_quadgsq_SOURCES) \
	$(quadgsq2d_SOURCES) $(nodist_quadgsq2d_SOURCES) \
	$(quadtsq_SOURCES) $(nodist_quadtsq_SOURCES) \
	$(quadtsq2d_SOURCES) $(nodist_quadtsq2d_SOURCES)
DIST_SOURCES = $(am__libqd_f_main_a_SOURCES_DIST) \
	$(am__libqdmod_a_SOURCES_DIST) $(am__dd_timer_SOURCES_DIST) \
	$(am__qd_timer_SOURCES_DIST) $(am__quaderq_SOURCES_DIST) \
	$(am__quadgsq_SOURCES_DIST) $(am__quadgsq2d_SOURCES_DIST) \
	$(am__quadtsq_SOURCES_DIST) $(am__quadtsq2d_SOURCES_DIST)
pkglibDATA_INSTALL = $(INSTALL_DATA)
DATA = $(pkglib_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/Greggory/Programing/cpp/qd-2.3.12/config/missing --run aclocal-1.10
AMTAR = ${SHELL} /Users/Greggory/Programing/cpp/qd-2.3.12/config/missing --run tar
AUTOCONF = ${SHELL} /Users/Greggory/Programing/cpp/qd-2.3.12/config/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/Greggory/Programing/cpp/qd-2.3.12/config/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/Greggory/Programing/cpp/qd-2.3.12/config/missing --run automake-1.10
AWK = awk
CC = c++
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CONFIGURE_ARGS = 
CPPFLAGS = 
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O2 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ETIME = 
EXEEXT = 
F77 = 
FC = 
FCFLAGS = -O2 
FCLIBS = 
FFLAGS = -O2 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS =  -lm
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/Greggory/Programing/cpp/qd-2.3.12/config/missing --run makeinfo
MKDIR_P = ../config/install-sh -c -d
OBJEXT = o
PACKAGE = qd
PACKAGE_BUGREPORT = yozo@cs.berkeley.edu
PACKAGE_NAME = qd
PACKAGE_STRING = qd 2.3.12
PACKAGE_TARNAME = qd
PACKAGE_VERSION = 2.3.12
PATH_SEPARATOR = :
RANLIB = ranlib
REQ_CXXFLAGS = 
REQ_FCFLAGS = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 2.3.12
abs_builddir = /Users/Greggory/Programing/cpp/qd-2.3.12/fortran
abs_srcdir = /Users/Greggory/Programing/cpp/qd-2.3.12/fortran
abs_top_builddir = /Users/Greggory/Programing/cpp/qd-2.3.12
abs_top_srcdir = /Users/Greggory/Programing/cpp/qd-2.3.12
ac_ct_CC = c++
ac_ct_CXX = c++
ac_ct_FC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
ax_f90_modflag = 
bindir = ${exec_prefix}/bin
build = i386-apple-darwin11.2.0
build_alias = 
build_cpu = i386
build_os = darwin11.2.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin11.2.0
host_alias = 
host_cpu = i386
host_os = darwin11.2.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/Greggory/Programing/cpp/qd-2.3.12/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/config/install-sh -c -d
module_ext = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
#AM_CPPFLAGS = -I$(top_builddir) -I$(top_builddir)/include -I$(top_srcdir)/include
#LDADD = libqdmod.a libqd_f_main.a $(top_builddir)/src/libqd.a $(FCLIBS)
#DDEXT = ddext.$(module_ext)
##DDEXT = DDEXT.$(module_ext)
#QDEXT = qdext.$(module_ext)
##QDEXT = QDEXT.$(module_ext)
#QDMOD = qdmodule.$(module_ext)
##QDMOD = QDMODULE.$(module_ext)
#DDMOD = ddmodule.$(module_ext)
##DDMOD = DDMODULE.$(module_ext)
#lib_LIBRARIES = libqdmod.a libqd_f_main.a
#libqdmod_a_SOURCES = ddext.f ddmod.f qdext.f qdmod.f f_dd.cpp f_qd.cpp
#libqd_f_main_a_SOURCES = main.cpp
#pkglib_DATA = $(QDMOD) $(QDEXT) $(DDMOD) $(DDEXT)
#DEMO = quaderq$(EXEEXT) quadgsq2d$(EXEEXT) quadgsq$(EXEEXT) \
#     quadtsq$(EXEEXT) quadtsq2d$(EXEEXT)

#TIMER = dd_timer$(EXEEXT) qd_timer$(EXEEXT)
#EXTRA_PROGRAMS = $(DEMO) $(TIMER)
#quaderq_SOURCES = tquaderq.f
#nodist_quaderq_SOURCES = second.f
#quaderq_LINK = $(CXXLINK)
#quadgsq2d_SOURCES = tquadgsq2d.f
#nodist_quadgsq2d_SOURCES = second.f
#quadgsq2d_LINK = $(CXXLINK)
#quadgsq_SOURCES = tquadgsq.f
#nodist_quadgsq_SOURCES = second.f
#quadgsq_LINK = $(CXXLINK)
#quadtsq_SOURCES = tquadtsq.f
#nodist_quadtsq_SOURCES = second.f
#quadtsq_LINK = $(CXXLINK)
#quadtsq2d_SOURCES = tquadtsq2d.f
#nodist_quadtsq2d_SOURCES = second.f
#quadtsq2d_LINK = $(CXXLINK)
#dd_timer_SOURCES = dd_timer.f
#nodist_dd_timer_SOURCES = second.f
#dd_timer_LINK = $(CXXLINK)
#qd_timer_SOURCES = qd_timer.f
#nodist_qd_timer_SOURCES = second.f
#qd_timer_LINK = $(CXXLINK)
#CLEANFILES = $(EXTRA_PROGRAMS) *.mod
MAINTAINERCLEANFILES = dd_timer.f qd_timer.f
EXTRA_DIST = dd_timer.f qd_timer.f zz_timer.f Makefile.sample
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .f .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  fortran/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  fortran/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
second.f: $(top_builddir)/config.status $(srcdir)/second.f.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libqd_f_main.a: $(libqd_f_main_a_OBJECTS) $(libqd_f_main_a_DEPENDENCIES) 
	-rm -f libqd_f_main.a
	$(libqd_f_main_a_AR) libqd_f_main.a $(libqd_f_main_a_OBJECTS) $(libqd_f_main_a_LIBADD)
	$(RANLIB) libqd_f_main.a
libqdmod.a: $(libqdmod_a_OBJECTS) $(libqdmod_a_DEPENDENCIES) 
	-rm -f libqdmod.a
	$(libqdmod_a_AR) libqdmod.a $(libqdmod_a_OBJECTS) $(libqdmod_a_LIBADD)
	$(RANLIB) libqdmod.a
dd_timer$(EXEEXT): $(dd_timer_OBJECTS) $(dd_timer_DEPENDENCIES) 
	@rm -f dd_timer$(EXEEXT)
	$(dd_timer_LINK) $(dd_timer_OBJECTS) $(dd_timer_LDADD) $(LIBS)
qd_timer$(EXEEXT): $(qd_timer_OBJECTS) $(qd_timer_DEPENDENCIES) 
	@rm -f qd_timer$(EXEEXT)
	$(qd_timer_LINK) $(qd_timer_OBJECTS) $(qd_timer_LDADD) $(LIBS)
quaderq$(EXEEXT): $(quaderq_OBJECTS) $(quaderq_DEPENDENCIES) 
	@rm -f quaderq$(EXEEXT)
	$(quaderq_LINK) $(quaderq_OBJECTS) $(quaderq_LDADD) $(LIBS)
quadgsq$(EXEEXT): $(quadgsq_OBJECTS) $(quadgsq_DEPENDENCIES) 
	@rm -f quadgsq$(EXEEXT)
	$(quadgsq_LINK) $(quadgsq_OBJECTS) $(quadgsq_LDADD) $(LIBS)
quadgsq2d$(EXEEXT): $(quadgsq2d_OBJECTS) $(quadgsq2d_DEPENDENCIES) 
	@rm -f quadgsq2d$(EXEEXT)
	$(quadgsq2d_LINK) $(quadgsq2d_OBJECTS) $(quadgsq2d_LDADD) $(LIBS)
quadtsq$(EXEEXT): $(quadtsq_OBJECTS) $(quadtsq_DEPENDENCIES) 
	@rm -f quadtsq$(EXEEXT)
	$(quadtsq_LINK) $(quadtsq_OBJECTS) $(quadtsq_LDADD) $(LIBS)
quadtsq2d$(EXEEXT): $(quadtsq2d_OBJECTS) $(quadtsq2d_DEPENDENCIES) 
	@rm -f quadtsq2d$(EXEEXT)
	$(quadtsq2d_LINK) $(quadtsq2d_OBJECTS) $(quadtsq2d_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/f_dd.Po
include ./$(DEPDIR)/f_qd.Po
include ./$(DEPDIR)/main.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.o:
	$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-pkglibDATA: $(pkglib_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkglibDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(pkglibDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

uninstall-pkglibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkglibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES install-pkglibDATA

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES uninstall-pkglibDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-pkglibDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLIBRARIES \
	uninstall-pkglibDATA

#ddmod.o: ddext.o
#qdmod.o: ddmod.o qdext.o
#$(QDMOD): qdmod.o
#$(DDMOD): ddmod.o
#$(DDEXT): ddext.o
#$(QDEXT): qdext.o

#demo: $(DEMO)

dd_timer.f: zz_timer.f
	sed -e 's/@@/dd/' zz_timer.f >dd_timer.f

qd_timer.f: zz_timer.f
	sed -e 's/@@/qd/' zz_timer.f >qd_timer.f

#.PHONY: demo
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
